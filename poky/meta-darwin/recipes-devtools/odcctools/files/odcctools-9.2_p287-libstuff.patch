Index: include/stuff/bytesex.h
===================================================================
--- include/stuff/bytesex.h	(revision 287)
+++ include/stuff/bytesex.h	(working copy)
@@ -306,6 +306,10 @@
 extern void swap_arm_thread_state(struct arm_thread_state *cpu,
     enum byte_sex target_byte_sex);
 
+extern void swap_encryption_command(
+    struct encryption_info_command *ec,
+    enum byte_sex target_byte_sex);
+
 extern void swap_ident_command(
     struct ident_command *id_cmd,
     enum byte_sex target_byte_sex);
Index: libstuff/swap_headers.c
===================================================================
--- libstuff/swap_headers.c	(revision 287)
+++ libstuff/swap_headers.c	(working copy)
@@ -1469,7 +1469,7 @@
 			switch(flavor){
 			case ARM_THREAD_STATE:
 			    cpu = (arm_thread_state_t *)state;
-			    swap_arm_thread_state_t(cpu, target_byte_sex);
+			    swap_arm_thread_state(cpu, target_byte_sex);
 			    state += sizeof(arm_thread_state_t);
 			    break;
 			}
Index: libstuff/writeout.c
===================================================================
--- libstuff/writeout.c	(revision 287)
+++ libstuff/writeout.c	(working copy)
@@ -21,6 +21,7 @@
  * @APPLE_LICENSE_HEADER_END@
  */
 #ifndef RLD
+#include <time.h>
 #include <sys/time.h>
 #include <mach/mach.h>
 #include "stuff/openstep_mach.h"
Index: libstuff/ofile.c
===================================================================
--- libstuff/ofile.c	(revision 287)
+++ libstuff/ofile.c	(working copy)
@@ -4511,7 +4511,7 @@
 			    }
 			    cpu = (arm_thread_state_t *)state;
 			    if(swapped)
-				swap_arm_thread_state_t(cpu, host_byte_sex);
+				swap_arm_thread_state(cpu, host_byte_sex);
 			    state += sizeof(arm_thread_state_t);
 			    break;
 			default:
Index: libstuff/bytesex.c
===================================================================
--- libstuff/bytesex.c	(revision 287)
+++ libstuff/bytesex.c	(working copy)
@@ -2331,7 +2331,7 @@
 
 __private_extern__
 void
-swap_arm_thread_state_t(
+swap_arm_thread_state(
 struct arm_thread_state *cpu,
 enum byte_sex target_byte_sex)
 {
